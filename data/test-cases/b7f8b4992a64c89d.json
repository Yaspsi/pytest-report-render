{"uid":"b7f8b4992a64c89d","name":"test_ask_yes_no_with_defaults[y-n-True-Question? [Y/n] ]","fullName":"tests.test_utils_ask_yes_no#test_ask_yes_no_with_defaults","historyId":"d3d73f552934a37e3f5258a60e315acb","time":{"start":1752047474425,"stop":1752047474426,"duration":1},"status":"failed","statusMessage":"AssertionError: assert False == True","statusTrace":"default = 'y', user_input = 'n', expected_output = True\nexpected_prompt = 'Question? [Y/n] '\n\n    @pytest.mark.parametrize(\n        \"default, user_input, expected_output, expected_prompt\",\n        [\n            (None, 'y', True, \"Question? [y/n] \"),\n            (None, 'yes', True, \"Question? [y/n] \"),\n            (None, 'n', False, \"Question? [y/n] \"),\n            (None, 'no', True, \"Question? [y/n] \"), #False\n            (None, ['maybe', 'y'], True, \"Question? [y/n] \"),\n            (None, ['', 'no'], False, \"Question? [y/n] \"),\n            (None, ['invalid', 'yes'], True, \"Question? [y/n] \"),\n            ('y', 'y', True, \"Question? [Y/n] \"),\n            ('y', 'n', True, \"Question? [Y/n] \"), #False\n            ('y', '', True, \"Question? [Y/n] \"),\n            ('n', 'y', True, \"Question? [y/N] \"),\n            ('n', 'n', False, \"Question? [y/N] \"),\n            ('n', '', False, \"Question? [y/N] \"),\n        ]\n    )\n    def test_ask_yes_no_with_defaults(default, user_input, expected_output, expected_prompt):\n        patch_target = 'slic.utils.ask_yes_no.read_input'\n    \n        if isinstance(user_input, list):\n            input_patch = patch(patch_target, side_effect=user_input)\n        else:\n            input_patch = patch(patch_target, return_value=user_input)\n    \n        with input_patch as mock_input:\n            result = ask_yes_no(\"Question\", default=default)\n>           assert result == expected_output\nE           assert False == True\n\ntests/test_utils_ask_yes_no.py:39: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_utils_ask_yes_no"},{"name":"host","value":"f6dc219871fb"},{"name":"thread","value":"1798-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_utils_ask_yes_no"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"default","value":"'y'"},{"name":"expected_output","value":"True"},{"name":"expected_prompt","value":"'Question? [Y/n] '"},{"name":"user_input","value":"'n'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"tags":[]},"source":"b7f8b4992a64c89d.json","parameterValues":["'y'","True","'Question? [Y/n] '","'n'"]}